<#
.SYNOPSIS
This function will create an app registration based on a provided template file.
.DESCRIPTION
This function will create an app registration based on a provided template file. Because there is so much possibilities, we have to use a template file to build our app.
To avoid mistakes, this function define "hardcode" few parameters like the apiToken Version, and the singletenant parameter.
.PARAMETER AccessToken
Specify token you use to run the query
.PARAMETER ConfigFilePath
Specify a json template with the confiiguration of your app registration
.PARAMETER ConfidentialApp
Specify if you want to create a confidential app (RBAC + Web App) instead of the default public one.
.EXAMPLE
New-AppRegistration -AccessToken "Bearrer ..." -ConfigFilePath -ConfigFilePath ".\Output\MyWebApp01.json" -ConfidentialApp

Will create a confidential, single tenant application based on the provided template.
.NOTES
VERSION HISTORY
1.0 | 2021/03/22 | Francois LEON
    initial version
POSSIBLE IMPROVEMENT
    -
#>
Function New-AppRegistration {
    [cmdletbinding()]
    param(
        [parameter(Mandatory = $true)]
        [string]$AccessToken,
        [parameter(Mandatory = $true)]
        [ValidateScript( {
                if (Get-Content $_ -Raw | ConvertFrom-Json -ErrorAction Stop) {
                    $true
                }
                else {
                    throw "$_ is  and invalid json file"
                }
            })]
        $ConfigFilePath,
        [switch]$ConfidentialApp
    )

    #Load template
    $ConfigData = Get-Content $ConfigFilePath -raw| ConvertFrom-Json -Depth 20

    #Get all properties names that we won't set manually
    $ignoredProperties = @("api","isFallbackPublicClient","signInAudience")
    $Keys = $ConfigData | Get-Member -MemberType NoteProperty | Where-Object {$_.name -notin $ignoredProperties} | Select-Object -ExpandProperty name

    #Generic values for all the app I will generate.
    $api = @{requestedAccessTokenVersion = "2" } # We always require tokens generated by V2 endpoint
    $isFallbackPublicClient = 'true' # Only RBAC and web app/api are confidential app
    $signInAudience = 'AzureADMyOrg' #AzureADMultipleOrgs for multi tenant app

    if ($ConfidentialApp) {
        $isFallbackPublicClient = 'false'
    }

    $Headers = @{
        'Authorization' = $AccessToken
        "Content-Type"  = 'application/json'
    }

    $Params = @{
        ErrorAction = "Stop"
        Headers     = $Headers
        uri         = 'https://graph.microsoft.com/v1.0/applications'
        Body        = $null
        method      = 'Post'
    }
    
    #Start to build our payload dynamically
    $BodyPayload = @{}

    $MandatoryArrayProp = @("identifierUris","requiredResourceAccess","appRoles")
    foreach($Key in $Keys){
        if($Key -in $MandatoryArrayProp){
            #Schema require an array for those values
            [array]$BodyPayload[$Key] = $($ConfigData.$Key)
        }
        else{
            $BodyPayload[$Key] = $($ConfigData.$Key)
        }
    }

    $BodyPayload.add('api',$api)
    $BodyPayload.add("isFallbackPublicClient",$isFallbackPublicClient )
    $BodyPayload.add("signInAudience",$signInAudience)

    $Params.Body = $BodyPayload | ConvertTo-Json -Depth 99
    Invoke-RestMethod @Params
}